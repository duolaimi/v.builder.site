###*
* @fileOverview 将字体文件复制到debug\dist 目录
* 
* @author pjg <iampjg@gmail.com>
* @link http://pjg.pw
* @version $Id$
###

fs      = require 'fs'
path    = require 'path'
_       = require 'lodash'
crypto  = require 'crypto'
vfs     = require 'vinyl-fs'
gutil   = require 'gulp-util'
autoprefixer = require 'gulp-autoprefixer'
plumber = require 'gulp-plumber'
color   = gutil.colors
Utils   = require '../utils'

defFontExt = ["eot","svg","ttf","woff"]

class CssCtl
    constructor:(@opts)->
        _this = @
        _this.root = _this.opts.root
        _this.hashLen = _this.opts.hashLen

        _this.srcPath = _this.opts.srcPath
        _this.debugPath = _this.opts.debugPath
        _this.distPath = _this.opts.distPath

        #字体目录
        _this.fontsPath = _this.srcPath + 'fonts'
        _this.fontsDebugPath = _this.debugPath + 'fonts'
        _this.fontsDistPath = _this.distPath + 'fonts'

        _this.fontExt = _this.opts.fontExt or defFontExt

        filePaths = []
        _this.fontExt.forEach (value,index)->
            filePaths.push path.join(_this.fontsPath, '*.'+value)

        _this.filePaths = filePaths

        _this.env = _this.opts.env
        _this.isDebug = _this.opts.isDebug

    ###*
     * 从src复制到debug
    ###
    copyDebug: (cb,offLog)->
        _this = @
        _cb = cb or ->
        _filePaths = _this.filePaths

        _fontsDebugPath = _this.fontsDebugPath
        _offLog = offLog or true

        vfs.src(_filePaths)
            .pipe plumber({errorHandler: Utils.errrHandler})
            .pipe vfs.dest _fontsDebugPath
            .on 'end',-> 
                _cb()
    ###*
     * 从debug复制到dist
    ###
    copyDist: (cb,offLog)->
        _this = @
        _cb = cb or ->
        _filePaths = _this.filePaths

        _fontsDistPath = _this.fontsDistPath

        _offLog = offLog or true

        vfs.src(_filePaths)
            .pipe plumber({errorHandler: Utils.errrHandler})
            .pipe vfs.dest _fontsDistPath
            .on 'end',-> 
                _cb()

module.exports = CssCtl